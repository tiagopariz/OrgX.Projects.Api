// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrgX.Projects.Api.Infra;

#nullable disable

namespace OrgX.Projects.Api.Infra.Migrations
{
    [DbContext(typeof(ProjectsDbContext))]
    [Migration("20240217000833_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrgX.Projects.Api.Domain.Entities.Comment", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("Content");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TaskId");

                    b.HasKey("Id")
                        .HasName("IX_dbo_Comment_Id");

                    b.HasIndex("TaskId");

                    b.ToTable("Comment", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c56b72d6-4716-45eb-bd5a-57b89d6dcff0"),
                            Content = "Comment 1 - Task 1",
                            TaskId = new Guid("66e7562d-3719-4da6-bdcb-95c2e38c80a1")
                        });
                });

            modelBuilder.Entity("OrgX.Projects.Api.Domain.Entities.History", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Entity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Entity");

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Field");

                    b.Property<string>("NewValue")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NewValue");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Operation");

                    b.Property<Guid>("PrimaryKeyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PrimaryKeyId");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id")
                        .HasName("IX_dbo_History_Id");

                    b.HasIndex("UserId");

                    b.ToTable("History", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc4237d4-a5f6-4103-99f5-80550f5db8d7"),
                            Entity = "Project",
                            Field = "Id",
                            NewValue = "beb32c8b-5e44-4f7e-abc3-05d3a7823b9d",
                            Operation = "INSERT",
                            PrimaryKeyId = new Guid("beb32c8b-5e44-4f7e-abc3-05d3a7823b9d"),
                            RegisterDate = new DateTime(2024, 2, 16, 21, 8, 32, 708, DateTimeKind.Local).AddTicks(8909),
                            UserId = new Guid("2bd26aa6-5344-4e51-b4b8-144bfb631f3f")
                        },
                        new
                        {
                            Id = new Guid("46aeda78-0638-44cd-a8ea-2f6952b58c9b"),
                            Entity = "Project",
                            Field = "Title",
                            NewValue = "Project 1",
                            Operation = "INSERT",
                            PrimaryKeyId = new Guid("beb32c8b-5e44-4f7e-abc3-05d3a7823b9d"),
                            RegisterDate = new DateTime(2024, 2, 16, 21, 8, 32, 708, DateTimeKind.Local).AddTicks(8922),
                            UserId = new Guid("2bd26aa6-5344-4e51-b4b8-144bfb631f3f")
                        },
                        new
                        {
                            Id = new Guid("1920161c-e3c8-4f18-a2d0-8092cb948e6d"),
                            Entity = "Project",
                            Field = "UserId",
                            NewValue = "2bd26aa6-5344-4e51-b4b8-144bfb631f3f",
                            Operation = "INSERT",
                            PrimaryKeyId = new Guid("beb32c8b-5e44-4f7e-abc3-05d3a7823b9d"),
                            RegisterDate = new DateTime(2024, 2, 16, 21, 8, 32, 708, DateTimeKind.Local).AddTicks(8924),
                            UserId = new Guid("2bd26aa6-5344-4e51-b4b8-144bfb631f3f")
                        },
                        new
                        {
                            Id = new Guid("08929b27-a7f2-445b-acdb-1fb6dbe4bf23"),
                            Entity = "Task",
                            Field = "Id",
                            NewValue = "66e7562d-3719-4da6-bdcb-95c2e38c80a1",
                            Operation = "INSERT",
                            PrimaryKeyId = new Guid("66e7562d-3719-4da6-bdcb-95c2e38c80a1"),
                            RegisterDate = new DateTime(2024, 2, 16, 21, 8, 32, 708, DateTimeKind.Local).AddTicks(8926),
                            UserId = new Guid("2bd26aa6-5344-4e51-b4b8-144bfb631f3f")
                        },
                        new
                        {
                            Id = new Guid("1ae61421-4cf9-4637-b82f-4d87836ad5d5"),
                            Entity = "Task",
                            Field = "Title",
                            NewValue = "Task 1 - Project 1",
                            Operation = "INSERT",
                            PrimaryKeyId = new Guid("66e7562d-3719-4da6-bdcb-95c2e38c80a1"),
                            RegisterDate = new DateTime(2024, 2, 16, 21, 8, 32, 708, DateTimeKind.Local).AddTicks(8928),
                            UserId = new Guid("2bd26aa6-5344-4e51-b4b8-144bfb631f3f")
                        },
                        new
                        {
                            Id = new Guid("7bef5d49-7472-41e4-8c75-d7f865f80c00"),
                            Entity = "Task",
                            Field = "Detail",
                            NewValue = "Task 1 of Project 1",
                            Operation = "INSERT",
                            PrimaryKeyId = new Guid("66e7562d-3719-4da6-bdcb-95c2e38c80a1"),
                            RegisterDate = new DateTime(2024, 2, 16, 21, 8, 32, 708, DateTimeKind.Local).AddTicks(8930),
                            UserId = new Guid("2bd26aa6-5344-4e51-b4b8-144bfb631f3f")
                        },
                        new
                        {
                            Id = new Guid("31f4bfea-3e2f-4bbd-86ab-fe6bbcb9d2ab"),
                            Entity = "Task",
                            Field = "Status",
                            NewValue = "0",
                            Operation = "INSERT",
                            PrimaryKeyId = new Guid("66e7562d-3719-4da6-bdcb-95c2e38c80a1"),
                            RegisterDate = new DateTime(2024, 2, 16, 21, 8, 32, 708, DateTimeKind.Local).AddTicks(8932),
                            UserId = new Guid("2bd26aa6-5344-4e51-b4b8-144bfb631f3f")
                        },
                        new
                        {
                            Id = new Guid("f4def38d-7b80-4e71-9635-8c5859f4997b"),
                            Entity = "Task",
                            Field = "Priority",
                            NewValue = "0",
                            Operation = "INSERT",
                            PrimaryKeyId = new Guid("66e7562d-3719-4da6-bdcb-95c2e38c80a1"),
                            RegisterDate = new DateTime(2024, 2, 16, 21, 8, 32, 708, DateTimeKind.Local).AddTicks(8955),
                            UserId = new Guid("2bd26aa6-5344-4e51-b4b8-144bfb631f3f")
                        },
                        new
                        {
                            Id = new Guid("5eb7ee91-93cc-4cfd-aded-36b4d460f893"),
                            Entity = "Task",
                            Field = "ProjectId",
                            NewValue = "beb32c8b-5e44-4f7e-abc3-05d3a7823b9d",
                            Operation = "INSERT",
                            PrimaryKeyId = new Guid("66e7562d-3719-4da6-bdcb-95c2e38c80a1"),
                            RegisterDate = new DateTime(2024, 2, 16, 21, 8, 32, 708, DateTimeKind.Local).AddTicks(8957),
                            UserId = new Guid("2bd26aa6-5344-4e51-b4b8-144bfb631f3f")
                        },
                        new
                        {
                            Id = new Guid("b74fdba2-7756-4669-8142-0b202248a598"),
                            Entity = "User",
                            Field = "Id",
                            NewValue = "2bd26aa6-5344-4e51-b4b8-144bfb631f3f",
                            Operation = "INSERT",
                            PrimaryKeyId = new Guid("2bd26aa6-5344-4e51-b4b8-144bfb631f3f"),
                            RegisterDate = new DateTime(2024, 2, 16, 21, 8, 32, 708, DateTimeKind.Local).AddTicks(8959),
                            UserId = new Guid("2bd26aa6-5344-4e51-b4b8-144bfb631f3f")
                        },
                        new
                        {
                            Id = new Guid("f8fc53ec-e65c-42c1-a367-50fb714e8c32"),
                            Entity = "User",
                            Field = "Username",
                            NewValue = "tiagopariz",
                            Operation = "INSERT",
                            PrimaryKeyId = new Guid("2bd26aa6-5344-4e51-b4b8-144bfb631f3f"),
                            RegisterDate = new DateTime(2024, 2, 16, 21, 8, 32, 708, DateTimeKind.Local).AddTicks(8961),
                            UserId = new Guid("2bd26aa6-5344-4e51-b4b8-144bfb631f3f")
                        },
                        new
                        {
                            Id = new Guid("ab1d3044-06fe-4c12-a18c-cad69f8dfb06"),
                            Entity = "User",
                            Field = "Role",
                            NewValue = "Manager",
                            Operation = "INSERT",
                            PrimaryKeyId = new Guid("2bd26aa6-5344-4e51-b4b8-144bfb631f3f"),
                            RegisterDate = new DateTime(2024, 2, 16, 21, 8, 32, 708, DateTimeKind.Local).AddTicks(8963),
                            UserId = new Guid("2bd26aa6-5344-4e51-b4b8-144bfb631f3f")
                        });
                });

            modelBuilder.Entity("OrgX.Projects.Api.Domain.Entities.Project", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Title");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id")
                        .HasName("IX_dbo_Project_Id");

                    b.HasIndex("Title")
                        .HasDatabaseName("IX_dbo_Project_Title");

                    b.HasIndex("UserId");

                    b.ToTable("Project", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("beb32c8b-5e44-4f7e-abc3-05d3a7823b9d"),
                            Title = "Project 1",
                            UserId = new Guid("2bd26aa6-5344-4e51-b4b8-144bfb631f3f")
                        });
                });

            modelBuilder.Entity("OrgX.Projects.Api.Domain.Entities.Task", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("Detail");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("Priority")
                        .HasColumnType("smallint")
                        .HasColumnName("Priority");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProjectId");

                    b.Property<short>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("Status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Title");

                    b.HasKey("Id")
                        .HasName("IX_dbo_Task_Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("Title")
                        .HasDatabaseName("IX_dbo_Task_Title");

                    b.ToTable("Task", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66e7562d-3719-4da6-bdcb-95c2e38c80a1"),
                            Detail = "Task 1 of Project 1",
                            Priority = (short)0,
                            ProjectId = new Guid("beb32c8b-5e44-4f7e-abc3-05d3a7823b9d"),
                            Status = (short)0,
                            Title = "Task 1 - Project 1"
                        });
                });

            modelBuilder.Entity("OrgX.Projects.Api.Domain.Entities.User", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Username");

                    b.HasKey("Id")
                        .HasName("IX_dbo_User_Id");

                    b.HasIndex("Username")
                        .HasDatabaseName("IX_dbo_User_Username");

                    b.ToTable("User", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2bd26aa6-5344-4e51-b4b8-144bfb631f3f"),
                            Role = "User",
                            Username = "tiagopariz"
                        },
                        new
                        {
                            Id = new Guid("4ee007a2-e556-46cb-941d-0472aec0fe9b"),
                            Role = "Manager",
                            Username = "vangogh"
                        });
                });

            modelBuilder.Entity("OrgX.Projects.Api.Domain.Entities.Comment", b =>
                {
                    b.HasOne("OrgX.Projects.Api.Domain.Entities.Task", "Task")
                        .WithMany("Comments")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_dbo_Comment_TaskId_dbo_Task_Id");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("OrgX.Projects.Api.Domain.Entities.History", b =>
                {
                    b.HasOne("OrgX.Projects.Api.Domain.Entities.User", "User")
                        .WithMany("Histories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_dbo_History_UserId_dbo_User_Id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OrgX.Projects.Api.Domain.Entities.Project", b =>
                {
                    b.HasOne("OrgX.Projects.Api.Domain.Entities.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_dbo_Project_UserId_dbo_User_Id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OrgX.Projects.Api.Domain.Entities.Task", b =>
                {
                    b.HasOne("OrgX.Projects.Api.Domain.Entities.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_dbo_Task_ProjectId_dbo_Project_Id");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("OrgX.Projects.Api.Domain.Entities.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("OrgX.Projects.Api.Domain.Entities.Task", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("OrgX.Projects.Api.Domain.Entities.User", b =>
                {
                    b.Navigation("Histories");

                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
